@page "/"
@inject IHttpClientFactory ClientFactory

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<div class="background-box">
    <h3>My plants</h3>
    <div class="plant-container">
        @if (plants == null)
        {
            <p>Loading plants...</p>
        }
        else
        {
            @foreach (var plant in plants)
            {
                var newestMetric = plant.Metrics?.OrderByDescending(m => m.Timestamp).FirstOrDefault();

                if (newestMetric != null)
                {
                    <PlantWidget Name="@plant.PlantName"
                    Humidity="@newestMetric.AirHumidity.ToString()"
                    Temperature="@newestMetric.Temperature.ToString()"
                    Moisture="@newestMetric.SoilMoisture.ToString()"
                    LightLevel="@newestMetric.LightLevel.ToString()" />
                }
                else
                {
                    <p>@plant.PlantName has no metrics yet.</p>
                }
            }
        }
    </div>
</div>

@code {
    private List<Plant> plants = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = ClientFactory.CreateClient("ApiCall");
            var email = "1@example.com";
            var encodedEmail = Uri.EscapeDataString(email);

            plants = await client.GetFromJsonAsync<List<Plant>>($"plant/byUser/{encodedEmail}");
            
            Console.WriteLine($"Received {plants.Count} plants.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching plant data: {ex.Message}");
        }
    }
}
