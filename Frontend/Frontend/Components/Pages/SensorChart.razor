@page "/metric/{plantId}"
@inject IHttpClientFactory ClientFactory
@inject IJSRuntime JS

<h3>Plant Metrics Chart</h3>
<canvas id="sensorChart" width="800" height="400"></canvas>

@code {
    [Parameter] public string plantId { get; set; } = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var client = ClientFactory.CreateClient("ApiCall");
                var data = await client.GetFromJsonAsync<List<MetricDto>>($"api/metric/{plantId}");
                Console.WriteLine($"✅ Received {data?.Count} records");
                await JS.InvokeVoidAsync("renderSensorChart", data);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"❌ Exception: {ex.Message}");
            }
        }
    }

    public class MetricDto
    {
        public DateTime timestamp { get; set; }
        public float? temperature { get; set; }
        public float? airHumidity { get; set; }
        public float? soilMoisture { get; set; }
        public float? lightLevel { get; set; }
    }
}
