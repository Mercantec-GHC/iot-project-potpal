@page "/shop/{productID:int}"
@rendermode InteractiveServer
@inject IHttpClientFactory ClientFactory

<PageTitle>Shop</PageTitle>

@if (product == null)
{
	<p>Loading product details...</p>
}
else
{
	<div class="shop-item-container">
		<div class="content-box-shop">
			<div class="center-content">
				<div class="image-shop-product">
					<img src="@product.ImagePath" />
				</div>
				<h1>@product.ItemName</h1>
			</div>
		</div>
		<div class="content-box-shop">
			<div class="description-text">
				<h1>@($"Description: {product.Price}")</h1>
			</div>
			<div class="price">
				<h1>@($"{product.Price} kr.")</h1>
			</div>
			<div class="center-content">
				<div class="add-to-cart">
					<input type="number" min="1" class="quantity-input"/>
					<button class="button-centered" @onclick="AddToCart">Add to cart</button>
				</div>
			</div>

			@if (ResponseMessage != null)
			{
				<p>@ResponseMessage</p>
			}
		</div>
	</div>
}


@code {
	[Parameter]
	public int productID { get; set; }
	public string ResponseMessage { get; set; }

	public Models.ShopItem product;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			var client = ClientFactory.CreateClient("ApiCall");
			product = await client.GetFromJsonAsync<Models.ShopItem>($"shop/byID/{productID}");
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error fetching plant data: {ex.Message}");
		}
	}

	async Task AddToCart()
	{
		var client = ClientFactory.CreateClient("ApiCall");
		var userToken = "1";
		var itemID = product.Id;
		User user = await client.GetFromJsonAsync<User>($"user/{userToken}");
		CartItem cartItem = new()
			{
				User = user,
				ShopItem = product,
				UserToken = userToken,
				ItemId = itemID,
				Quantity = 1
			};
		var status = await client.PostAsJsonAsync($"shop/addToCart", cartItem);

		if (status.StatusCode == HttpStatusCode.OK)
		{
			ResponseMessage = "Added to cart";
		}
		else if (status.StatusCode == HttpStatusCode.Conflict)
		{
			ResponseMessage = "Item is already in your cart";
		}
		else
		{
			ResponseMessage = "Error, try again";
		}
	}
}
